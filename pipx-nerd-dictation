#!/usr/bin/env python3
import os
import subprocess
import sys
from pathlib import Path

# Define state file path
STATE_FILE = Path.home() / ".nerd-dictation-state"
SOUND_BEGIN = Path.home() / ".config" / "nerd-dictation" / "sounds" / "sound-begin.mp3"
SOUND_END = Path.home() / ".config" / "nerd-dictation" / "sounds" / "sound-end.mp3"

def activate_vosk():
    """Activate the vosk environment from pipx."""
    vosk_env = Path.home() / ".local/share/pipx/venvs/vosk/bin/activate"
    if not vosk_env.exists():
        print("Error: vosk environment not found")
        sys.exit(1)
    
    # Source the activate script and get the environment variables
    try:
        result = subprocess.run(
            ['bash', '-c', f'source {vosk_env} && env'],
            capture_output=True,
            text=True,
            check=True
        )
        
        # Update current process environment with the activated environment
        for line in result.stdout.splitlines():
            if '=' in line:
                key, value = line.split('=', 1)
                os.environ[key] = value
    except subprocess.CalledProcessError as e:
        print(f"Error activating vosk environment: {e}")
        sys.exit(1)

def read_state():
    """Read the current state from the state file."""
    if not STATE_FILE.exists():
        STATE_FILE.write_text("0")
    return int(STATE_FILE.read_text())

def write_state(value):
    """Write the new state to the state file."""
    STATE_FILE.write_text(str(value))

def run_nerd_dictation(args):
    """Run nerd-dictation with the specified arguments."""
    nerd_dictation_path = Path.home() / ".local" / "bin" / "nerd-dictation"
    if not nerd_dictation_path.exists():
        print(f"Error: nerd-dictation not found at {nerd_dictation_path}")
        sys.exit(1)
    
    try:
        subprocess.run([str(nerd_dictation_path)] + args, check=True)
        return True
    except subprocess.CalledProcessError as e:
        print(f"Error running nerd-dictation: {e}")
        return False

def play_sound(sound_file):
    """Play a sound file using paplay."""
    try:
        subprocess.run(['paplay', str(sound_file)], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Error playing sound: {e}")
    except FileNotFoundError:
        print("Error: paplay not found. Please install pulseaudio-utils to enable sound playback.")

def main():
    # Activate vosk environment
    activate_vosk()
    
    # Read current state
    state = read_state()
    
    if state == 0:
        write_state(1)
        play_sound(SOUND_BEGIN)
        run_nerd_dictation(["begin", "--full-sentence", "--numbers-as-digits", "--numbers-use-separator", "--numbers-min-value", "10", "--numbers-no-suffix"])
    
    else:
        # Reset state to 0 immediately
        write_state(0)
        # Stop the program if it's running
        run_nerd_dictation(["end"])
        # Play end sound
        play_sound(SOUND_END)
        sys.exit(0)


if __name__ == "__main__":
    main() 
